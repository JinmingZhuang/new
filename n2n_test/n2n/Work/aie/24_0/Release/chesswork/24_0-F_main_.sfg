
// File generated by noodle version R-2020.09#506a3c766d#210520, Mon Nov 29 13:41:06 2021
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// noodle -v -I/opt/tools/xilinx/Vitis/2021.1/aietools/data/versal_prod/lib -I/opt/tools/xilinx/Vitis/2021.1/aietools/data/versal_prod/lib/isg -I/opt/tools/xilinx/Vitis/2021.1/aietools/include -I./aie -I/home/Jinming/research/aie_project/n2n/. -I/home/Jinming/research/aie_project/n2n/./aie -I/opt/tools/xilinx/Vitis/2021.1/aietools/data/versal_prod/lib/runtime_cxx/libcxx-lite/include -I/opt/tools/xilinx/Vitis/2021.1/aietools/data/versal_prod/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/opt/tools/xilinx/Vitis/2021.1/aietools/data/versal_prod/lib/runtime/include -D__AIENGINE__ -D__AIEARCH__=1 -DDEPLOYMENT_ELF=1 +Oitm -iaie_core.h +Sinl +Olbb=200 +Opmsa +Olzyinl +w../Release/chesswork ../Release/chesswork/24_0.sfg +Q1=+Sinl,+Olbb=200,+Opmsa,+Olzyinl +Q2=+Sinl,+Olbb=200,+Opmsa,+Olzyinl +Q3=+Sinl,+Olbb=1000,+Opmsa,+Olzyinl +Qfast=+Sinl,+Olbb=1000,+Opmsa,+Olzyinl,+Opfp +Qs=+Sinl,+Olbb=200,+Opmsa,+Olzyinl +Qz=+Sinl,+Olbb=200,+Opmsa,+Olzyinl me


/***
// unsigned main()
F_main : user_defined, called {
    fnm : "main" 'unsigned main()'; 
    arg : ( addr:i w32:r );
    loc : ( LR[0] R[0] );
    flc : ( P[6] P[7] R[4] R[10] R[11] );
    frm : ( );
}
****
***/

[
    0 : main typ=iword bnd=e stl=PM
    6 : _cst typ=amod val=0f bnd=m
    7 : __tmp typ=addr bnd=m
    8 : _cst val=32f bnd=D tref2=l2v1
    9 : _cst val=0f bnd=D tref2=l2v2
   10 : _cst val=-1f bnd=D tref2=l2v3
   11 : _cst val=33f bnd=D tref2=l2v4
   12 : _cst val=6144f bnd=D tref2=l2v5
   13 : _cst val=48f bnd=D tref2=l5v1
   14 : _cst val=0f bnd=D tref2=l5v2
   15 : _cst val=-1f bnd=D tref2=l5v3
   16 : _cst val=49f bnd=D tref2=l5v4
   17 : _cst val=6144f bnd=D tref2=l5v5
   18 : _cst val=0f bnd=D tref2=l6v1
   19 : __tmp typ=w32 bnd=m
   21 : proc_24_0_bounds typ=w32 bnd=m tref2=l7v0
   22 : __tmp typ=bool bnd=m
   30 : _cst val=32f bnd=D tref2=l9v1
   31 : _cst val=33f bnd=D tref2=l10v1
   32 : _cst val=0f bnd=D tref2=l13v1
   33 : _cst val=1f bnd=D tref2=l15v1
   34 : _cst typ=amod val=33f bnd=m
   35 : _cst typ=amod val=32f bnd=m
   39 : _cst val=1f bnd=D tref2=l18v1
   41 : _cst typ=t01u val=1f bnd=m
   42 : _cst typ=amod val=1f bnd=m
   44 : _cst val=48f bnd=D tref2=l20v1
   45 : _cst val=49f bnd=D tref2=l21v1
   46 : _cst val=0f bnd=D tref2=l24v1
   47 : _cst val=0f bnd=D tref2=l26v1
   48 : _cst typ=amod val=49f bnd=m
   49 : _cst typ=amod val=48f bnd=m
   53 : _cst val=0f bnd=D tref2=l29v1
   54 : _cst val=0f bnd=D tref2=l36v1
   56 : __tmp typ=__ushort bnd=m
   57 : _cst val=2f bnd=D tref2=l43v1
   64 : _cst val=2f bnd=D tref2=l47v1
   66 : _cst val=32f bnd=D tref2=l49v1
   67 : _cst val=33f bnd=D tref2=l50v1
   68 : _cst val=0f bnd=D tref2=l55v1
   69 : _cst val=0f bnd=D tref2=l59v1
   71 : _cst val=48f bnd=D tref2=l61v1
   72 : _cst val=49f bnd=D tref2=l62v1
   73 : _cst val=1f bnd=D tref2=l67v1
   74 : _cst val=1f bnd=D tref2=l71v1
   75 : index typ=w32 bnd=m tref2=l6v0
   78 : _cst typ=t02u val=2f bnd=m
   81 : __ali0 typ=w08 bnd=b stl=DMb
   82 : __ali1 typ=w08 bnd=b stl=DMb
   83 : __ext typ=w08 bnd=b stl=DMb
   84 : __vola typ=iword bnd=b stl=PM
   93 : __la typ=addr bnd=p
   94 : __rt typ=w32 bnd=p
  100 : __M_DMh typ=w16 bnd=d stl=DMh
  101 : __M_DMs typ=w32 bnd=d stl=DMs
  152 : __R_LC typ=w32 bnd=d stl=LC
  153 : __R_LE typ=addr bnd=d stl=LE
  154 : __R_LS typ=addr bnd=d stl=LS
  170 : __R_SP typ=addr bnd=d stl=SP
  171 : __sp typ=addr bnd=b stl=SP
  172 : __rd___sp typ=addr bnd=m
  173 : __wr___sp typ=addr bnd=m
  174 : __rd___sp typ=addr bnd=m
  176 : __wr___sp typ=addr bnd=m
  177 : _ZL11sync_buffer typ=w08 bnd=i sz=32 algn=16 stl=DMb
  179 : __ptr__ZL11sync_buffer typ=addr val=0a bnd=m adro=177
  181 : buf0 typ=w08 bnd=e sz=6144 algn=16 stl=DMb
  183 : __ptr_buf0 typ=addr val=0a bnd=m adro=181
  184 : buf0d typ=w08 bnd=e sz=6144 algn=16 stl=DMb
  186 : __ptr_buf0d typ=addr val=0a bnd=m adro=184
  187 : buf1 typ=w08 bnd=e sz=6144 algn=16 stl=DMb
  189 : __ptr_buf1 typ=addr val=0a bnd=m adro=187
  190 : buf1d typ=w08 bnd=e sz=6144 algn=16 stl=DMb
  192 : __ptr_buf1d typ=addr val=0a bnd=m adro=190
  204 : __tmp typ=addr bnd=m
  208 : __tmp typ=w32 bnd=m
  223 : __ct_8 typ=any val=8f bnd=m
  224 : __ct_5 typ=any val=5f bnd=m
  225 : __ct_2 typ=amod val=2f bnd=m
  226 : __ct_6144 typ=amod val=6144f bnd=m
  230 : __shv___ptr__ZL11sync_buffer typ=addr bnd=m
  232 : __shv___ptr__ZL11sync_buffer typ=addr bnd=m
  279 : __ct_0s0 typ=amod val=0s0 bnd=m
  280 : __ct_0S0 typ=amod val=0S0 bnd=m
  281 : __ct_m4 typ=amod val=-4f bnd=m
  282 : __ct_4 typ=amod val=4f bnd=m
  322 : __ct_3072l typ=amod val=3072l bnd=m
  327 : __either typ=bool bnd=m
  328 : __trgt typ=addr val=0J bnd=m
  329 : __trgt typ=addr val=0J bnd=m
  330 : __trgt typ=addr val=0J bnd=m
  331 : __trgt typ=addr val=0J bnd=m
  332 : __trgt typ=addr val=0J bnd=m
  333 : __trgt typ=addr val=0J bnd=m
]
F_main {
    #607 off=0
    (_cst.6 var=6) const ()  <6>;
    (_cst.61 var=34) const ()  <61>;
    (_cst.62 var=35) const ()  <62>;
    (_cst.68 var=41) const ()  <68>;
    (_cst.69 var=42) const ()  <69>;
    (_cst.78 var=48) const ()  <78>;
    (_cst.79 var=49) const ()  <79>;
    (_cst.173 var=78) const ()  <173>;
    (__ali0.193 var=81) source ()  <196>;
    (__ali1.194 var=82) source ()  <198>;
    (__ext.195 var=83) source ()  <200>;
    (__vola.196 var=84) source ()  <202>;
    (__la.205 var=93 stl=LR off=0) inp ()  <213>;
    (__la.206 var=93) deassign (__la.205)  <214>;
    (__M_DMh.574 var=100) st_def ()  <512>;
    (__M_DMs.575 var=101) st_def ()  <514>;
    (__M_DMs.640 var=101 __ali0.641 var=81 __vola.642 var=84) store (_cst.6 __ptr__ZL11sync_buffer.716 __ali0.193 __vola.196)  <632>;
    (__R_SP.705 var=170) st_def ()  <656>;
    (__sp.706 var=171) source ()  <657>;
    (__rd___sp.707 var=172) rd_res_reg (__R_SP.705 __sp.706)  <658>;
    (__R_SP.709 var=170 __sp.710 var=171) wr_res_reg (__wr___sp.861 __sp.706)  <660>;
    (__rd___sp.711 var=174) rd_res_reg (__R_SP.705 __sp.710)  <661>;
    (__ptr__ZL11sync_buffer.716 var=179) const ()  <667>;
    (__ptr_buf0.717 var=183) const ()  <669>;
    (__ptr_buf0d.718 var=186) const ()  <671>;
    (__ptr_buf1.719 var=189) const ()  <673>;
    (__ptr_buf1d.720 var=192) const ()  <675>;
    (__ct_2.771 var=225) const ()  <818>;
    (__ct_6144.772 var=226) const ()  <820>;
    (__wr___sp.861 var=173) __Pvoid_add___Pvoid_amod (__rd___sp.707 __ct_0s0.880)  <999>;
    (__shv___ptr__ZL11sync_buffer.877 var=232) __Pvoid_add___Pvoid_amod (__ptr__ZL11sync_buffer.716 __ct_4.883)  <1027>;
    (__ct_0s0.880 var=279) const ()  <1055>;
    (__ct_m4.882 var=281) const ()  <1059>;
    (__ct_4.883 var=282) const ()  <1061>;
    (__ct_3072l.1048 var=322) const ()  <1401>;
    (__trgt.1052 var=328) const ()  <1427>;
    (__trgt.1054 var=329) const ()  <1430>;
    (__trgt.1056 var=330) const ()  <1433>;
    (__trgt.1057 var=331) const ()  <1435>;
    (__trgt.1060 var=332) const ()  <1439>;
    (__R_LS.1061 var=154) wr_res_reg (__trgt.1060)  <1440>;
    (__trgt.1062 var=333) const ()  <1441>;
    (__R_LE.1063 var=153) wr_res_reg (__trgt.1062)  <1442>;
    do {
        {
            (__tmp.190 var=19) entry (__tmp.216 _cst.6)  <190>;
            (__ali0.398 var=81) entry (__ali0.228 __ali0.641)  <382>;
            (__ali1.399 var=82) entry (__ali1.230 __ali1.194)  <383>;
            (__ext.400 var=83) entry (__ext.232 __ext.195)  <384>;
            (__vola.401 var=84) entry (__vola.234 __vola.642)  <385>;
            (__shv___ptr__ZL11sync_buffer.776 var=230) entry (__shv___ptr__ZL11sync_buffer.774 __shv___ptr__ZL11sync_buffer.877)  <826>;
        } #4
        {
            #870 off=1
            (proc_24_0_bounds.643 var=21 __ali0.644 var=81 __vola.645 var=84) load (__M_DMs.575 __shv___ptr__ZL11sync_buffer.776 __ali0.398 __vola.401)  <633>;
            (__tmp.783 var=22) bool_eqz___uint (proc_24_0_bounds.643)  <835>;
            (__shv___ptr__ZL11sync_buffer.869 var=230) __Pvoid_add___Pvoid_amod (__shv___ptr__ZL11sync_buffer.776 __ct_m4.882)  <1013>;
            () void_ba_bool_addr (__tmp.783 __trgt.1054)  <1431>;
            (__either.1055 var=327) undefined ()  <1432>;
            if {
                {
                    () if_expr (__either.1055)  <25>;
                } #9
                {
                } #10 off=21
                {
                    do {
                        {
                            (__tmp.163 var=19) entry (__tmp.218 proc_24_0_bounds.643)  <163>;
                            (__tmp.164 var=19) entry (__tmp.220 __tmp.190)  <164>;
                            (__ali0.378 var=81) entry (__ali0.273 __ali0.644)  <367>;
                            (__ali1.379 var=82) entry (__ali1.275 __ali1.399)  <368>;
                            (__ext.380 var=83) entry (__ext.277 __ext.400)  <369>;
                            (__vola.381 var=84) entry (__vola.279 __vola.645)  <370>;
                        } #14
                        {
                            #878 off=3
                            (__ali0.646 var=81 __ali1.647 var=82 __ext.648 var=83 __vola.649 var=84) chain_tie_fence (__ali0.378 __ali1.379 __ext.380 __vola.381)  <634>;
                            (__tmp.786 var=22) bool_eqz___uint (__tmp.164)  <841>;
                            (__tmp.1014 var=204) __Pvoid_select_bool___Pvoid___Pvoid (__tmp.786 __ptr_buf0.717 __ptr_buf0d.718)  <1343>;
                            (__tmp.1015 var=208) __ulong_select_bool___ulong___ulong (__tmp.786 _cst.62 _cst.61)  <1344>;
                            call {
                                () chess_separator_scheduler ()  <222>;
                            } #58 off=4
                            #61 off=5
                            (__vola.650 var=84) void_acquire___uint_uint1_t___uint (__tmp.1015 _cst.68 _cst.69 __vola.649)  <223>;
                            call {
                                () chess_separator_scheduler ()  <224>;
                            } #62 off=6
                            #133 off=7
                            (__ali0.651 var=81 __ali1.652 var=82 __ext.653 var=83 __vola.654 var=84) chain_tie_fence (__ali0.646 __ali1.647 __ext.648 __vola.650)  <635>;
                            (__ali0.655 var=81 __ali1.656 var=82 __ext.657 var=83 __vola.658 var=84) chain_tie_fence (__ali0.651 __ali1.652 __ext.653 __vola.654)  <636>;
                            (__tmp.1016 var=204) __Pvoid_select_bool___Pvoid___Pvoid (__tmp.1065 __ptr_buf1.719 __ptr_buf1d.720)  <1345>;
                            (__tmp.1017 var=208) __ulong_select_bool___ulong___ulong (__tmp.1065 _cst.79 _cst.78)  <1346>;
                            (__tmp.1065 var=22) bool_eqz___uint (__tmp.164)  <1445>;
                            call {
                                () chess_separator_scheduler ()  <225>;
                            } #64 off=8
                            #67 off=9
                            (__vola.659 var=84) void_acquire___uint_uint1_t___uint (__tmp.1017 _cst.68 _cst.6 __vola.658)  <226>;
                            call {
                                () chess_separator_scheduler ()  <227>;
                            } #68 off=10
                            #73 off=11
                            (__ali0.660 var=81 __ali1.661 var=82 __ext.662 var=83 __vola.663 var=84) chain_tie_fence (__ali0.655 __ali1.656 __ext.657 __vola.659)  <637>;
                            (__R_LC.1059 var=152) wr_res_reg (__ct_3072l.1048)  <1438>;
                            (__ct_3072l.1064 var=322) undefined ()  <1444>;
                            for {
                                {
                                    (__tmp.125 var=7) entry (__tmp.222 __tmp.1016)  <125>;
                                    (__tmp.126 var=7) entry (__tmp.224 __tmp.1014)  <126>;
                                    (__ali1.349 var=82) entry (__ali1.320 __ali1.661)  <338>;
                                } #19
                                {
                                    (__tmp.664 var=56) load (__M_DMh.574 __tmp.126 __ali0.660)  <638>;
                                    (__M_DMh.665 var=100 __ali1.666 var=82) store (__tmp.664 __tmp.125 __ali1.349)  <639>;
                                    (__tmp.759 var=7) __Pvoid_cyclic_add___Pvoid_mod_t___Pvoid_mod_t (__tmp.126 __ct_2.771 __tmp.1014 __ct_6144.772)  <771>;
                                    (__tmp.766 var=7) __Pvoid_cyclic_add___Pvoid_mod_t___Pvoid_mod_t (__tmp.125 __ct_2.771 __tmp.1016 __ct_6144.772)  <781>;
                                } #161 off=12
                                {
                                    () for_count (__ct_3072l.1064)  <128>;
                                    (__tmp.222 var=7 __tmp.223 var=7) exit (__tmp.766)  <244>;
                                    (__tmp.224 var=7 __tmp.225 var=7) exit (__tmp.759)  <245>;
                                    (__ali1.320 var=82 __ali1.321 var=82) exit (__ali1.666)  <318>;
                                    () zloop_sink_absolute (__R_LC.1059 __R_LS.1061 __R_LE.1063)  <1443>;
                                } #28
                            } #18 rng=[3072,3072]
                            #79 off=13
                            (__ali0.667 var=81 __ali1.668 var=82 __ext.669 var=83 __vola.670 var=84) chain_tie_fence (__ali0.660 __ali1.321 __ext.662 __vola.663)  <640>;
                            call {
                                () chess_separator_scheduler ()  <232>;
                            } #80 off=14
                            #85 off=15
                            (__vola.671 var=84) void_release___uint_uint1_t___uint (__tmp.1015 _cst.68 _cst.6 __vola.670)  <233>;
                            (__ali0.672 var=81 __ali1.673 var=82 __ext.674 var=83 __vola.675 var=84) chain_tie_fence (__ali0.667 __ali1.668 __ext.669 __vola.671)  <641>;
                            (__ali0.676 var=81 __ali1.677 var=82 __ext.678 var=83 __vola.679 var=84) chain_tie_fence (__ali0.672 __ali1.673 __ext.674 __vola.675)  <642>;
                            call {
                                () chess_separator_scheduler ()  <235>;
                            } #86 off=16
                            #89 off=17
                            (__vola.680 var=84) void_release___uint_uint1_t___uint (__tmp.1017 _cst.68 _cst.69 __vola.679)  <236>;
                            call {
                                () chess_separator_scheduler ()  <237>;
                            } #90 off=18
                            #902 off=19
                            (index.155 var=75) __uint__mi___uint___uint (_cst.69 __tmp.164)  <155>;
                            (proc_24_0_bounds.159 var=21) __uint__mi___uint___uint (__tmp.163 __tmp.854)  <159>;
                            (__ali0.681 var=81 __ali1.682 var=82 __ext.683 var=83 __vola.684 var=84) chain_tie_fence (__ali0.676 __ali1.677 __ext.678 __vola.680)  <643>;
                            (__ali0.685 var=81 __ali1.686 var=82 __ext.687 var=83 __vola.688 var=84) chain_tie_fence (__ali0.681 __ali1.682 __ext.683 __vola.684)  <644>;
                            (__tmp.789 var=22) bool_nez___uint (proc_24_0_bounds.159)  <847>;
                            (__tmp.854 var=22) bool__lt___sint___sint (_cst.6 __tmp.163)  <986>;
                            () void_ba_bool_addr (__tmp.789 __trgt.1052)  <1428>;
                            (__either.1053 var=327) undefined ()  <1429>;
                        } #15
                        {
                            () while_expr (__either.1053)  <165>;
                            (__tmp.218 var=19 __tmp.219 var=19) exit (proc_24_0_bounds.159)  <242>;
                            (__tmp.220 var=19 __tmp.221 var=19) exit (index.155)  <243>;
                            (__ali0.273 var=81 __ali0.274 var=81) exit (__ali0.685)  <282>;
                            (__ali1.275 var=82 __ali1.276 var=82) exit (__ali1.686)  <283>;
                            (__ext.277 var=83 __ext.278 var=83) exit (__ext.687)  <284>;
                            (__vola.279 var=84 __vola.280 var=84) exit (__vola.688)  <285>;
                        } #35
                    } #13
                    #944 off=20
                    () void_ja_addr (__trgt.1056)  <1434>;
                } #942
                {
                    (__tmp.166 var=19) merge (__tmp.190 __tmp.221)  <166>;
                    (__ali0.268 var=81) merge (__ali0.644 __ali0.274)  <277>;
                    (__ali1.269 var=82) merge (__ali1.399 __ali1.276)  <278>;
                    (__ext.270 var=83) merge (__ext.400 __ext.278)  <279>;
                    (__vola.271 var=84) merge (__vola.645 __vola.280)  <280>;
                } #36
            } #8
            #92 off=22
            (__ali0.689 var=81 __ali1.690 var=82 __ext.691 var=83 __vola.692 var=84) chain_tie_fence (__ali0.268 __ali1.269 __ext.270 __vola.271)  <645>;
            call {
                () chess_separator_scheduler (__ct_8.769)  <238>;
                (__ct_8.769 var=223) const_inp ()  <816>;
            } #93 off=23
            #96 off=24
            (__vola.693 var=84) void_event_uint2_t (_cst.173 __vola.692)  <239>;
            call {
                () chess_separator_scheduler (__ct_5.770)  <240>;
                (__ct_5.770 var=224) const_inp ()  <817>;
            } #97 off=25
            #411 off=26
            (__ali0.694 var=81 __ali1.695 var=82 __ext.696 var=83 __vola.697 var=84) chain_tie_fence (__ali0.689 __ali1.690 __ext.691 __vola.693)  <646>;
            (__tmp.698 var=19 __ali0.699 var=81 __vola.700 var=84) load (__M_DMs.575 __shv___ptr__ZL11sync_buffer.869 __ali0.694 __vola.697)  <647>;
            (__tmp.857 var=22) bool__ge___sint___sint (_cst.6 __tmp.698)  <992>;
            (__shv___ptr__ZL11sync_buffer.873 var=230) __Pvoid_add___Pvoid_amod (__shv___ptr__ZL11sync_buffer.869 __ct_4.883)  <1020>;
            (__tmp.1051 var=22) bool_nez_w32 (__tmp.857)  <1426>;
            () void_ba_bool_addr (__tmp.1051 __trgt.1057)  <1436>;
            (__either.1058 var=327) undefined ()  <1437>;
        } #5
        {
            () while_expr (__either.1058)  <191>;
            (__tmp.216 var=19 __tmp.217 var=19) exit (__tmp.166)  <241>;
            (__ali0.228 var=81 __ali0.229 var=81) exit (__ali0.699)  <247>;
            (__ali1.230 var=82 __ali1.231 var=82) exit (__ali1.695)  <248>;
            (__ext.232 var=83 __ext.233 var=83) exit (__ext.696)  <249>;
            (__vola.234 var=84 __vola.235 var=84) exit (__vola.700)  <250>;
            (__shv___ptr__ZL11sync_buffer.774 var=230 __shv___ptr__ZL11sync_buffer.775 var=230) exit (__shv___ptr__ZL11sync_buffer.873)  <825>;
        } #44
    } #3
    #100 off=27 nxt=-2
    () sink (__ali0.229)  <197>;
    () sink (__ali1.231)  <199>;
    () sink (__ext.233)  <201>;
    () sink (__vola.235)  <203>;
    (__rt.207 var=94 stl=R off=0) assign (_cst.6)  <215>;
    () out (__rt.207)  <216>;
    () void_ret_addr (__la.206)  <217>;
    (__R_SP.714 var=170 __sp.715 var=171) wr_res_reg (__wr___sp.865 __sp.710)  <665>;
    () sink (__sp.715)  <666>;
    (__wr___sp.865 var=176) __Pvoid_add___Pvoid_amod (__rd___sp.711 __ct_0S0.881)  <1006>;
    (__ct_0S0.881 var=280) const ()  <1057>;
} #1
0 : '/home/Jinming/research/aie_project/n2n/aie/n2n_trans1.cc';
1 : '/opt/tools/xilinx/Vitis/2021.1/aietools/data/versal_prod/lib/isg/me_chess_llvm.h';
2 : '/opt/tools/xilinx/Vitis/2021.1/aietools/include/adf/window/window.h';
3 : '24_0/src/24_0.cc';
4 : 'main';
----------
0 : (4,0:0,0);
1 : (3,32:0,2);
58 : (1,115420:5,12,9);
61 : (2,1083:16,9);
62 : (1,115422:5,14,9);
64 : (1,115420:5,12,12);
67 : (2,1083:16,9);
68 : (1,115422:5,14,12);
73 : (2,1083:16,9);
79 : (1,115428:5,22);
80 : (1,115429:5,23,22);
85 : (1,115428:5,22);
86 : (1,115429:5,23,23);
89 : (1,115428:5,22);
90 : (1,115431:5,25,23);
92 : (3,0:0,8);
93 : (1,115485:5,31,26);
96 : (3,0:0,8);
97 : (1,115487:5,33,26);
100 : (3,71:0,36);
133 : (1,115419:5,11,12);
161 : (0,8:16,17,20);
411 : (3,68:21,35,24);
607 : (3,0:0,8,5);
870 : (3,48:9,7,5);
878 : (1,115419:5,11,9);
902 : (3,48:9,7,24);
----------
6 : (3,33:17,0);
25 : (3,48:2,7,5);
61 : (2,1083:16,0,7);
62 : (2,1083:16,0,7);
68 : (1,115421:5,0,9);
69 : (1,115421:5,0,9);
78 : (2,1083:16,0,10);
79 : (2,1083:16,0,10);
128 : (0,8:2,17,21);
155 : (3,60:14,27,24);
159 : (3,64:7,29,24);
165 : (3,48:2,7,25);
166 : (3,48:2,7,25);
173 : (1,115486:5,0,26);
216 : (3,71:0,36,25);
217 : (3,71:0,36,25);
222 : (1,115420:5,12,9);
223 : (1,115421:5,13,9);
224 : (1,115422:5,14,9);
225 : (1,115420:5,12,12);
226 : (1,115421:5,13,12);
227 : (1,115422:5,14,12);
232 : (1,115429:5,23,22);
233 : (1,115430:5,24,22);
235 : (1,115429:5,23,23);
236 : (1,115430:5,24,23);
237 : (1,115431:5,25,23);
238 : (1,115485:5,31,26);
239 : (1,115486:5,32,26);
240 : (1,115487:5,33,26);
632 : (3,33:17,1);
633 : (3,46:27,6,5);
634 : (1,115419:5,11,9);
635 : (1,115423:5,15,9);
636 : (1,115419:5,11,12);
637 : (1,115423:5,15,12);
638 : (2,836:2,19,16);
639 : (2,836:2,19,18);
640 : (1,115428:5,22,22);
641 : (1,115432:5,26,22);
642 : (1,115428:5,22,23);
643 : (1,115432:5,26,23);
644 : (3,62:4,28,24);
645 : (1,115484:5,30,26);
646 : (1,115488:5,34,26);
647 : (3,68:6,35,24);
660 : (3,32:0,0);
665 : (3,71:0,36,25);
667 : (3,33:17,0);
669 : (3,0:0,0,5);
671 : (3,0:0,0,5);
673 : (3,0:0,0,5);
675 : (3,0:0,0,5);
771 : (2,482:2,20,17);
781 : (2,492:2,21,19);
816 : (1,115485:5,31,26);
817 : (1,115487:5,33,26);
818 : (2,482:2,0,17);
820 : (2,482:2,0,17);
835 : (3,48:9,7,5);
841 : (2,1083:16,9,7);
847 : (3,48:9,7,24);
986 : (3,64:24,29,24);
992 : (3,68:21,35,24);
999 : (3,32:0,0);
1006 : (3,71:0,0,25);
1013 : (3,33:17,0);
1027 : (3,42:8,0,4);
1055 : (3,32:0,0);
1057 : (3,71:0,0,25);
1059 : (3,33:17,0);
1343 : (2,1083:16,9,7);
1344 : (2,1084:17,10,8);
1345 : (2,1083:16,9,10);
1346 : (2,1084:17,10,11);
1428 : (3,48:2,7,25);
1431 : (3,48:2,7,5);
1438 : (0,8:2,17,21);
1440 : (0,8:2,17,21);
1442 : (0,8:2,17,21);
==========ranges_locs
0: ' ';
1: ' l71v0 l70v0 l69v0 l68v0 l67v0 l66v0 l65v0 l64v0 l63v0 l62v0 l61v0 l60v0 l59v0 l58v0 l57v0 l56v0 l55v0 l54v0 l53v0 l52v0 l51v0 l50v0 l49v0 l48v0 l47v0 l46v0 l45v0 l44v0 l43v0 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v0 l28v0 l27v0 l26v0 l25v0 l24v0 l23v0 l22v0 l21v0 l20v0 l19v0 l18v0 l17v0 l16v0 l15v0 l14v0 l13v0 l12v0 l11v0 l10v0 l9v0 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 ';
2: ' l2v5 l1v0 l0v0 ';
3: ' l6v1 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 ';
4: ' l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 ';
5: ' l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r19 ';
6: ' l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r19 ';
7: ' l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r19 ';
8: ' l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r19 ';
9: ' l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r0 r1 r19 ';
10: ' l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r2 r19 ';
11: ' l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r2 r19 ';
12: ' l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r2 r3 r19 ';
13: ' l36v1 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r4 r5 r6 r7 r10 r11 r19 ';
14: ' l36v1 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r4 r8 r9 r10 r11 r19 ';
15: ' l36v1 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r4 r11 r19 ';
16: ' l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r4 r5 r6 r10 r11 r19 ';
17: ' l43v1 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r4 r5 r6 r7 r10 r11 r19 ';
18: ' l45v0 l44v0 l43v1 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r4 r8 r10 r11 r19 ';
19: ' l47v1 l46v0 l45v0 l44v0 l43v1 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r4 r8 r9 r10 r11 r19 ';
20: ' l47v1 l46v0 l45v0 l44v0 l43v1 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r4 r11 r19 ';
21: ' l47v1 l46v0 l45v0 l44v0 l43v1 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r19 ';
22: ' l59v1 l58v0 l57v0 l56v0 l55v1 l54v0 l53v0 l52v0 l51v0 l50v1 l49v1 l48v0 l47v1 l46v0 l45v0 l44v0 l43v1 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r12 r13 r14 r19 ';
23: ' l71v1 l70v0 l69v0 l68v0 l67v1 l66v0 l65v0 l64v0 l63v0 l62v1 l61v1 l60v0 l59v1 l58v0 l57v0 l56v0 l55v1 l54v0 l53v0 l52v0 l51v0 l50v1 l49v1 l48v0 l47v1 l46v0 l45v0 l44v0 l43v1 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r15 r16 r17 r19 ';
24: ' l71v1 l70v0 l69v0 l68v0 l67v1 l66v0 l65v0 l64v0 l63v0 l62v1 l61v1 l60v0 l59v1 l58v0 l57v0 l56v0 l55v1 l54v0 l53v0 l52v0 l51v0 l50v1 l49v1 l48v0 l47v1 l46v0 l45v0 l44v0 l43v1 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r19 ';
25: ' l71v1 l70v0 l69v0 l68v0 l67v1 l66v0 l65v0 l64v0 l63v0 l62v1 l61v1 l60v0 l59v1 l58v0 l57v0 l56v0 l55v1 l54v0 l53v0 l52v0 l51v0 l50v1 l49v1 l48v0 l47v1 l46v0 l45v0 l44v0 l43v1 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 ';
26: ' l71v1 l70v0 l69v0 l68v0 l67v1 l66v0 l65v0 l64v0 l63v0 l62v1 l61v1 l60v0 l59v1 l58v0 l57v0 l56v0 l55v1 l54v0 l53v0 l52v0 l51v0 l50v1 l49v1 l48v0 l47v1 l46v0 l45v0 l44v0 l43v1 l42v0 l41v0 l40v0 l39v0 l38v0 l37v0 l36v0 l35v0 l34v0 l33v0 l32v0 l31v0 l30v0 l29v1 l28v0 l27v0 l26v1 l25v0 l24v1 l23v0 l22v0 l21v1 l20v1 l19v0 l18v1 l17v0 l16v0 l15v1 l14v0 l13v1 l12v0 l11v0 l10v1 l9v1 l8v0 l7v0 l6v0 l5v0 l4v0 l3v0 l2v0 l1v0 l0v0 r18 r19 ';

